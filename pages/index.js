import Head from "next/head";
import Image from "next/image";
import { Fragment, useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import FadeIn from "react-fade-in";
import { START } from "./constants";
import cloneDeep from "lodash.clonedeep";

export default function Home() {
  const [dialogue, setDialogue] = useState(START);
  const [previousOptions, setPreviousOptions] = useState(
    START.response.options
  );
  const [gameOver, setGameOver] = useState(false);
  const [gameWon, setGameWon] = useState(false);

  const [finalText, setFinalText] = useState("");
  const maxScore = 6;

  const bearResponse = dialogue.response ?? {};
  const options = bearResponse.options ?? dialogue.options ?? previousOptions;
  const currentHumanText = dialogue.text ?? "";
  const bearText = bearResponse.text ?? "";

  const [score, setScore] = useState(2);

  const onSetScore = (_valence) => {
    setScore(score + _valence);
    if (score + _valence < 0) {
      setGameOver(true);
      setFinalText(bearText);
      setDialogue({});
    } else if (score + _valence > maxScore) {
      setGameWon(true);
      setDialogue({});
      setFinalText(bearText);
    }
  };

  const onChooseResponse = (response = 0) => {
    if (options.length > 0) {
      setDialogue(options[response]);
      setPreviousOptions(options);
      if (!!options[response]["valence"]) {
        onSetScore(options[response]["valence"]);
      }
    }
  };

  const restart = () => {
    setScore(2);
    setGameOver(false);
    setGameWon(false);

    setDialogue(START);
    setPreviousOptions(START.response.options);
    setFinalText("");
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>I Will Eat You | Change My Mind</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button onClick={restart}>Restart</button>
        <div
          style={{
            display: "flex",
            flexDirection: "column",
            width: "1000px",
            height: "500px",
            backgroundColor: "lightblue",
            position: "relative",
            color: "black",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          {gameWon ? (
            <>
              <p>
                {finalText.split("\n").map((text, index) => (
                  <p key={`${index}-${index}`}>{text.trim()}</p>
                ))}
              </p>
              <Image
                src="/noun-grizzly-bear_stand.svg"
                height={400}
                width={400}
                alt="Bear"
              />
              <big>{`I think I might go try to get some food. 

                You can go home now.`}</big>
            </>
          ) : gameOver ? (
            <>
              <p>
                {finalText.split("\n").map((text, index) => (
                  <p key={`${index}-${index}`}>{text.trim()}</p>
                ))}
              </p>
              <Image
                src="/noun-bear_scare.svg"
                height={400}
                width={400}
                alt="Attacking bear"
              />
              <big>*eats you*</big>
            </>
          ) : (
            <>
              <div
                style={{
                  // position: "absolute",
                  position: "relative",
                  height: "200px",
                  width: "1000px",
                  backgroundColor: "gray",
                }}
              >
                <div
                  style={{
                    position: "absolute",
                    top: "50%",
                    left: "50px",
                    height: "10px",
                    width: "900px",
                    backgroundColor: "red",
                  }}
                />

                <div
                  style={{
                    position: "absolute",
                    top: "calc(50% - (100px/2))",
                    left: `calc(5px + (900px / 6) * ${score})`,
                    zIndex: 10,
                    // border: "1px solid black",
                  }}
                >
                  <Image
                    src="/noun-bear.svg"
                    alt="Bear"
                    width={100}
                    height={100}
                  />
                </div>

                {Array.from(Array(maxScore + 1).keys()).map((index) => (
                  <div
                    key={index}
                    className={styles.circle}
                    style={{
                      left: `calc(25px + (900px / 6) * ${index})`,
                    }}
                  />
                ))}
              </div>
              <div
                style={{
                  // position: "absolute",
                  height: "500px",
                  width: "1000px",
                  backgroundColor: "pink",
                }}
              >
                <div>
                  <FadeIn>
                    {currentHumanText.split("\n").map((text, index) => (
                      <p key={`${index}-${index}`}>{text.trim()}</p>
                    ))}
                  </FadeIn>
                </div>

                <div style={{ backgroundColor: "cornflowerblue" }}>
                  <FadeIn>
                    {bearText.split("\n").map((text, index) => (
                      <p key={`${index}-${index}`}>{text}</p>
                    ))}
                  </FadeIn>
                </div>

                <ul
                  style={{
                    bottom: "0px",
                    position: "absolute",
                  }}
                >
                  {options.map((option, index) => (
                    <li
                      key={`${index}`}
                      onClick={() => onChooseResponse(index)}
                      class={styles.option}
                    >
                      {option.text}
                      {/* {option.text.split("\n").map((text, index) => (
                        <Fragment key={`${index}-${index}`}>
                          <span>{text}</span>
                          <br />
                        </Fragment>
                      ))} */}
                    </li>
                  ))}
                </ul>
              </div>
            </>
          )}
        </div>
        {/* <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a> */}
        {/* </div> */}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
